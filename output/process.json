[
  "[SQL] Retrieve the following for each supplier for shipments in the last year (ship_date within the last year): supplier_id, supplier_name, total_shipments_count (total unique shipments linked to the supplier), delayed_shipments_count (total unique delayed shipments linked to the supplier, where delivered_date > expected_date), delayed_warehouses_names (comma-separated list of unique warehouse names involved in delayed shipments for that supplier), and delayed_customer_ids_list (comma-separated list of customer IDs involved in delayed shipments for that supplier, including duplicates for frequency counting). This query will join `shipments`, `orders`, `order_items`, `products`, `purchase_order_items`, `purchase_orders`, `suppliers`, and `warehouses` tables.",
  "[ANALYZE] Process the SQL query results. For each supplier, calculate the percentage of delayed shipments. Parse the `delayed_customer_ids_list` to determine the top 3 most affected customers by counting the frequency of each customer ID. Retrieve the names of these top 3 customers using a separate database query. Format the final output to include the supplier's name, the number of delayed shipments, the percentage of delayed shipments, the warehouses that handled those delayed shipments, and the names of the top 3 most affected customers. Order the suppliers by the number of delayed shipments in descending order."
]